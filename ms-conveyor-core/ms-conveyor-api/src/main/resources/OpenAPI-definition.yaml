openapi: 3.0.3
info:
  title: ms-conveyor-api
  description: API for conveyor
  contact:
    name: Leva Dokhoyan
    email: dokhoyan-leva@mail.ru
  version: 1.0.0
servers:
  - url: 'https://localhost:8080/api/v1'
    description: Development server
tags:
  - name: Conveyor
    description: Endpoints related to conveyor operations

paths:
  /conveyor/offers:
    post:
      tags:
        - Conveyor
      summary: Calculate possible credit offers
      description: Calculates possible credit offers based on LoanApplicationRequestDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'
        '400':
          $ref: '#/components/responses/400'

  /conveyor/calculation:
    post:
      tags:
        - Conveyor
      summary: Validate input data, perform scoring, and calculate credit parameters
      description: Validates input data, performs scoring, and calculates credit parameters based on ScoringDataDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoringDataDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditDTO'
        '400':
          $ref: '#/components/responses/400'

components:
  schemas:
    LoanApplicationRequestDTO:
      type: object
      properties:
        amount:
          type: number
          format: decimal
          example: 1000000.00
          minimum: 10000.00
        term:
          type: integer
          format: int32
          example: 24
          minimum: 6
        firstName:
          type: string
          example: Ivan
          pattern: '^[A-Za-z\\-]{2,30}$'
        lastName:
          type: string
          example: Ivanov
          pattern: '^[A-Za-z\\-]{2,30}$'
        middleName:
          type: string
          example: Ivanonovich
          pattern: '^[A-Za-z]{2,30}$'
        email:
          type: string
          example: iivanov@email.ru
          pattern: '^[A-Za-z]{2,50}$'
        birthdate:
          type: string
          format: date
          example: 2000-11-12
        passportSeries:
          type: string
          example: '1234'
          pattern: '^[0-9]{4}$'
        passportNumber:
          type: string
          example: '123456'
          pattern: '^[0-9]{6}$'

    LoanOfferDTO:
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        requestedAmount:
          type: number
          format: decimal
          example: 1000000.00
          minimum: 10000.00
        totalAmount:
          type: number
          format: decimal
        term:
          type: integer
          format: int32
          example: 24
          minimum: 6
        monthlyPayment:
          type: number
          format: decimal
          example: 1000000.00
        rate:
          type: number
          format: decimal
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean

    ScoringDataDTO:
      type: object
      properties:
        amount:
          type: number
          format: decimal
          example: 1000000.00
          minimum: 10000.00
        term:
          type: integer
          format: int32
          example: 24
          minimum: 6
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        gender:
          $ref: '#/components/schemas/GenderEnum'
        birthdate:
          type: string
          format: date
          example: 2000-11-12
        passportSeries:
          type: string
        passportNumber:
          type: string
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusEnum'
        dependentAmount:
          type: integer
          format: int32
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean

    CreditDTO:
      title: CreditDTO
      type: object
      properties:
        amount:
          type: number
          format: decimal
        term:
          type: integer
          format: int32
        monthlyPayment:
          type: number
          format: decimal
        rate:
          type: number
          format: decimal
        psk:
          type: number
          format: decimal
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
        paymentSchedule:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleElement'

    FinishRegistrationRequestDTO:
      title: FinishRegistrationRequestDTO
      type: object
      properties:
        gender:
          $ref: '#/components/schemas/GenderEnum'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusEnum'
        dependentAmount:
          type: integer
          format: int32
        passportIssueDate:
          type: string
          format: date
        passportIssueBrach:
          type: string
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string

    EmploymentDTO:
      title: EmploymentDTO
      type: object
      properties:
        employmentStatus:
          $ref: '#/components/schemas/EmploymentStatusEnum'
        employerINN:
          type: string
        salary:
          type: string
          format: decimal
        position:
          $ref: '#/components/schemas/PositionEnum'
        workExperienceTotal:
          type: integer
          format: int32
          example: 12
          minimum: 12
        workExperienceCurrent:
          type: integer
          format: int32

    PaymentScheduleElement:
      title: PaymentScheduleElement
      type: object
      properties:
        number:
          type: integer
          format: int32
        date:
          type: string
          format: date
        totalPayment:
          type: string
          format: decimal
        interestPayment:
          type: string
          format: decimal
        debtPayment:
          type: string
          format: decimal
        remainingDebt:
          type: string
          format: decimal

    Response:
      type: object
      description: Request processing result
      properties:
        data:
          type: object
          description: Response data
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

    Error:
      type: object
      description: Error information
      required:
        - description
      properties:
        description:
          type: string
          description: Error message
        details:
          type: string
          description: Error details

  # Enums
    GenderEnum:
      type: string
      enum:
        - MALE
        - FEMALE
        - NON_BINARY

    MaritalStatusEnum:
      type: string
      enum:
        - SINGLE
        - MARRIED
        - DIVORCED
        - WIDOWED

    EmploymentStatusEnum:
      type: string
      enum:
        - EMPLOYED
        - UNEMPLOYED
        - SELF_EMPLOYED
        - BUSINESS_OWNER

    PositionEnum:
      type: string
      enum:
        - MANAGER
        - DEVELOPER
        - ANALYST
        - OTHER

  responses:
    200:
      description: OK
    400:
      description: Bad request
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Response'

